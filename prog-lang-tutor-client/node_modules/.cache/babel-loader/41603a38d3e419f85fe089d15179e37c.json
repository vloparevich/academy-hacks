{"ast":null,"code":"import axios from 'axios';\nconst service = axios.create({\n  baseURL: 'http://localhost:5000/api/review' // withCredentials: true // => you might need this when having the users in the app\n\n});\nconst REVIEW_SERVICE = {\n  createReview: (studentId, tutorId, reviewContent) => {\n    return service.post('/tutor/review', {\n      studentId,\n      tutorId,\n      reviewContent\n    }).then(responseFromApi => {\n      return responseFromApi;\n    }).catch(err => console.log('error', err));\n  }\n}; // const USER_SERVICE = {\n//     getAllTutors: () => {\n//       return service.get('/tutor/list').then((tutors) => {\n//         return tutors.data.tutors;\n//       });\n//     },\n//     getSpecificTutor: (id) => {\n//       return service.get(`/tutor/${id}`).then((tutor) => tutor.data);\n//     },\n//     getSpecificStudent: (id) => {\n//       return service.get(`/${id}`).then((student) => student.data);\n//     },\n//   };\n\nexport default REVIEW_SERVICE;","map":{"version":3,"sources":["/Users/fernandosalcedo/Desktop/Ironhack/academy-hacks/prog-lang-tutor-client/src/services/ReviewService.js"],"names":["axios","service","create","baseURL","REVIEW_SERVICE","createReview","studentId","tutorId","reviewContent","post","then","responseFromApi","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,kCADgB,CAEzB;;AAFyB,CAAb,CAAhB;AAKA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,YAAY,EAAE,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,aAArB,KAAuC;AACjD,WAAOP,OAAO,CAACQ,IAAR,CAAa,eAAb,EAA8B;AAACH,MAAAA,SAAD;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA;AAArB,KAA9B,EAAmEE,IAAnE,CAAyEC,eAAD,IAAqB;AAChG,aAAOA,eAAP;AACH,KAFM,EAEJC,KAFI,CAEEC,GAAG,IACRC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAHG,CAAP;AAKH;AAPkB,CAAvB,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeT,cAAf","sourcesContent":["import axios from 'axios';\n\nconst service = axios.create({\n    baseURL: 'http://localhost:5000/api/review',\n    // withCredentials: true // => you might need this when having the users in the app\n});\n\nconst REVIEW_SERVICE = {\n    createReview: (studentId, tutorId, reviewContent) => {\n        return service.post('/tutor/review', {studentId, tutorId, reviewContent}).then((responseFromApi) => {\n            return responseFromApi;\n        }).catch(err => \n            console.log('error', err)\n        )\n    }\n};\n\n// const USER_SERVICE = {\n//     getAllTutors: () => {\n//       return service.get('/tutor/list').then((tutors) => {\n//         return tutors.data.tutors;\n//       });\n//     },\n//     getSpecificTutor: (id) => {\n//       return service.get(`/tutor/${id}`).then((tutor) => tutor.data);\n//     },\n//     getSpecificStudent: (id) => {\n//       return service.get(`/${id}`).then((student) => student.data);\n//     },\n//   };\n\nexport default REVIEW_SERVICE;"]},"metadata":{},"sourceType":"module"}