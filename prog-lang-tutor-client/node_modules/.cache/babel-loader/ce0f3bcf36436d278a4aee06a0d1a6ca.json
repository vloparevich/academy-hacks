{"ast":null,"code":"var _jsxFileName = \"/Users/fernandosalcedo/Desktop/Ironhack/academy-hacks/prog-lang-tutor-client/src/components/Timeslot/Timeslot.jsx\";\nimport React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './Timeslot.css';\nimport moment from 'moment';\nimport BOOKING_SERVICE from '../../services/BookingServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Timeslot extends Component {\n  constructor() {\n    super(...arguments);\n    this.currentDate = new Date();\n    this.state = {\n      isTimeSlotChecked: new Array(24).fill(false),\n      alreadyBookedSlots: [],\n      calendarValueLong: new Date(),\n      calendarValueShort: '',\n      pickedTimeSlots: [],\n      from: 0,\n      to: 0\n    };\n\n    this.componentDidMount = () => {\n      const {\n        timeRange\n      } = this.props;\n      this.setState({\n        from: timeRange.from,\n        to: timeRange.to\n      });\n    };\n\n    this.handleTimePickerChange = position => {\n      const timeSlots = this.state.pickedTimeSlots;\n      const updatedCheckedState = this.state.isTimeSlotChecked.map((item, index) => {\n        if (index === position) {\n          item ? timeSlots.splice(timeSlots.indexOf(index), 1) : timeSlots.push(index);\n          return !item;\n        }\n\n        return item;\n      });\n      this.setState({\n        isTimeSlotChecked: updatedCheckedState,\n        pickedTimeSlots: timeSlots.sort((a, b) => a - b)\n      });\n    };\n\n    this.createTimeSlots = () => {\n      const slots = [];\n\n      for (let i = this.state.from; i < this.state.to; i++) {\n        if (this.state.alreadyBookedSlots.includes(i)) continue;\n        slots.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            name: i,\n            onClick: () => this.handleTimePickerChange(i),\n            style: {\n              backgroundColor: this.state.isTimeSlotChecked[i] ? '#01FF70' : '#39CCCC'\n            },\n            children: [i, \":00-\", i + 1, \":00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this));\n      }\n\n      return slots;\n    };\n\n    this.onCalendarDateChange = event => {\n      const shortDateValue = moment(event).format('MM/DD/YYYY');\n      BOOKING_SERVICE.getMyScheduleForThisDay(shortDateValue, this.props.tutorId).then(responseFromApi => {\n        var _responseFromApi$data;\n\n        console.log('FRONT END just hit the backend', responseFromApi.data);\n        let singleDayBookings = [];\n        responseFromApi.data.thisDateWithBookings && (singleDayBookings = (_responseFromApi$data = responseFromApi.data.thisDateWithBookings) === null || _responseFromApi$data === void 0 ? void 0 : _responseFromApi$data.bookedSlots[0].bookedTime);\n        this.setState({\n          alreadyBookedSlots: singleDayBookings\n        }, () => console.log(this.state.alreadyBookedSlots));\n      }).catch(err => console.log(err));\n      this.setState({\n        calendarValueLong: event,\n        calendarValueShort: shortDateValue\n      });\n    };\n\n    this.handlePickedSlotsAndDate = () => {\n      console.log('time slot state', {\n        pickedTimeSlots: this.state.pickedTimeSlots,\n        calendarValueShort: this.state.calendarValueShort\n      }); // !!! check on empty calendar date 'calendarValueShort'\n\n      this.props.bookedTime(this.state); //After the state is sent to the route to be stored in the DB resetting the state\n\n      this.setState({\n        isTimeSlotChecked: new Array(24).fill(false),\n        // calendarValueLong: new Date(),\n        calendarValueShort: '',\n        pickedTimeSlots: []\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"schedulerComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"scheduler\",\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: event => this.onCalendarDateChange(event),\n          value: this.state.calendarValueLong,\n          minDate: new Date(this.currentDate.toUTCString())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timePicker\",\n          children: this.createTimeSlots().map(current => current)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"schedulerFooter\",\n        children: this.createTimeSlots().length !== 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handlePickedSlotsAndDate,\n          className: \"SaveTimeButton\",\n          children: \"Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"NoLessonsLeftBanner\",\n          children: \"This date is sold, try a different one...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/fernandosalcedo/Desktop/Ironhack/academy-hacks/prog-lang-tutor-client/src/components/Timeslot/Timeslot.jsx"],"names":["React","Component","Calendar","moment","BOOKING_SERVICE","Timeslot","currentDate","Date","state","isTimeSlotChecked","Array","fill","alreadyBookedSlots","calendarValueLong","calendarValueShort","pickedTimeSlots","from","to","componentDidMount","timeRange","props","setState","handleTimePickerChange","position","timeSlots","updatedCheckedState","map","item","index","splice","indexOf","push","sort","a","b","createTimeSlots","slots","i","includes","backgroundColor","onCalendarDateChange","event","shortDateValue","format","getMyScheduleForThisDay","tutorId","then","responseFromApi","console","log","data","singleDayBookings","thisDateWithBookings","bookedSlots","bookedTime","catch","err","handlePickedSlotsAndDate","render","toUTCString","current","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './Timeslot.css';\nimport moment from 'moment';\nimport BOOKING_SERVICE from '../../services/BookingServices';\n\nexport default class Timeslot extends Component {\n  currentDate = new Date();\n\n  state = {\n    isTimeSlotChecked: new Array(24).fill(false),\n    alreadyBookedSlots: [],\n    calendarValueLong: new Date(),\n    calendarValueShort: '',\n    pickedTimeSlots: [],\n    from: 0,\n    to: 0,\n  };\n\n  componentDidMount = () => {\n    const { timeRange } = this.props;\n\n    this.setState({\n      from: timeRange.from,\n      to: timeRange.to,\n    });\n  };\n\n  handleTimePickerChange = (position) => {\n    const timeSlots = this.state.pickedTimeSlots;\n    const updatedCheckedState = this.state.isTimeSlotChecked.map(\n      (item, index) => {\n        if (index === position) {\n          item\n            ? timeSlots.splice(timeSlots.indexOf(index), 1)\n            : timeSlots.push(index);\n          return !item;\n        }\n        return item;\n      }\n    );\n    this.setState({\n      isTimeSlotChecked: updatedCheckedState,\n      pickedTimeSlots: timeSlots.sort((a, b) => a - b),\n    });\n  };\n\n  createTimeSlots = () => {\n    const slots = [];\n    for (let i = this.state.from; i < this.state.to; i++) {\n      if (this.state.alreadyBookedSlots.includes(i)) continue;\n      slots.push(\n        <div key={i}>\n          <button\n            name={i}\n            onClick={() => this.handleTimePickerChange(i)}\n            style={{\n              backgroundColor: this.state.isTimeSlotChecked[i]\n                ? '#01FF70'\n                : '#39CCCC',\n            }}\n          >\n            {i}:00-{i + 1}:00\n          </button>\n        </div>\n      );\n    }\n    return slots;\n  };\n\n  onCalendarDateChange = (event) => {\n    const shortDateValue = moment(event).format('MM/DD/YYYY');\n    BOOKING_SERVICE.getMyScheduleForThisDay(shortDateValue, this.props.tutorId)\n      .then((responseFromApi) => {\n        console.log('FRONT END just hit the backend', responseFromApi.data);\n\n        let singleDayBookings = [];\n        responseFromApi.data.thisDateWithBookings &&\n          (singleDayBookings =\n            responseFromApi.data.thisDateWithBookings?.bookedSlots[0]\n              .bookedTime);\n\n        this.setState(\n          {\n            alreadyBookedSlots: singleDayBookings,\n          },\n          () => console.log(this.state.alreadyBookedSlots)\n        );\n      })\n      .catch((err) => console.log(err));\n\n    this.setState({\n      calendarValueLong: event,\n      calendarValueShort: shortDateValue,\n    });\n  };\n\n  handlePickedSlotsAndDate = () => {\n    console.log('time slot state', {\n      pickedTimeSlots: this.state.pickedTimeSlots,\n      calendarValueShort: this.state.calendarValueShort,\n    });\n    // !!! check on empty calendar date 'calendarValueShort'\n\n    this.props.bookedTime(this.state);\n    //After the state is sent to the route to be stored in the DB resetting the state\n\n    this.setState({\n      isTimeSlotChecked: new Array(24).fill(false),\n      // calendarValueLong: new Date(),\n      calendarValueShort: '',\n      pickedTimeSlots: [],\n    });\n  };\n\n  render() {\n    return (\n      <div id='schedulerComponent'>\n        <div id='scheduler'>\n          <Calendar\n            onChange={(event) => this.onCalendarDateChange(event)}\n            value={this.state.calendarValueLong}\n            minDate={new Date(this.currentDate.toUTCString())}\n          />\n          <div className='timePicker'>\n            {this.createTimeSlots().map((current) => current)}\n          </div>\n        </div>\n        <div id='schedulerFooter'>\n          {this.createTimeSlots().length !== 0 ? (\n            <button\n              onClick={this.handlePickedSlotsAndDate}\n              className='SaveTimeButton'\n            >\n              Book\n            </button>\n          ) : (\n            <div id='NoLessonsLeftBanner'>\n              This date is sold, try a different one...\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}