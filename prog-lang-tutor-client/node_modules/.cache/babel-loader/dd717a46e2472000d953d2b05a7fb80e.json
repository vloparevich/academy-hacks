{"ast":null,"code":"var _jsxFileName = \"/Users/fernandosalcedo/Desktop/Ironhack/academy-hacks/prog-lang-tutor-client/src/components/Profile/StudentProfile.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Profile.css';\nimport PROFILE_SERVICE from '../../services/ProfileServices';\nimport * as PATHS from '../../utils/paths.js';\nimport CountryFlag from '../CountryFlag/CountryFlag';\nimport MyLessons from '../MyLessons/MyLessons';\nimport USER_SERVICE from '../../services/UserServices.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass StudentProfile extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      profilePic: '',\n      countryOfOrigin: '',\n      teachingExperience: '',\n      timeRangeOfAvailability: '',\n      coursesTaught: '',\n      isEditProfileClicked: false,\n      isEditDetailsClicked: false,\n      isShowMyBookingsClicked: false,\n      prevCourseName: ''\n    };\n\n    this.getUser = () => {\n      USER_SERVICE.getSpecificStudent(this.state.user._id).then(res => {\n        this.setState({\n          firstName: res.user.firstName,\n          lastName: res.user.lastName,\n          countryOfOrigin: res.user.countryOfOrigin,\n          profilePic: res.user.profilePic,\n          aboutMe: res.user.aboutMe\n        });\n      });\n    };\n\n    this.handleDeleteButton = () => {\n      USER_SERVICE.deleteStudent(this.state.user._id).then(responseFromApi => {\n        console.log('Student after deletion', responseFromApi);\n        this.props.history.push(PATHS.HOMEPAGE);\n      });\n      this.props.handleLogout();\n    };\n\n    this.getUserWithUpdatedProfilePicture = event => {\n      const file = event.target.files[0];\n      const uploadData = new FormData();\n      uploadData.append('profilePic', file);\n      PROFILE_SERVICE.handleUpload(uploadData, this.state.user._id).then(responseFromApi => {\n        this.setState({\n          profilePic: responseFromApi.user\n        }, () => {\n          this.getUser();\n        });\n      });\n    };\n\n    this.handleRange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleEditButton = () => {\n      this.setState({\n        isEditDetailsClicked: !this.state.isEditDetailsClicked\n      });\n    };\n\n    this.handleShowBookingsButton = () => {\n      this.setState({\n        isShowMyBookingsClicked: !this.state.isShowMyBookingsClicked\n      });\n    };\n\n    this.handleEditProfileButton = () => {\n      this.setState({\n        isEditProfileClicked: !this.state.isEditProfileClicked\n      });\n\n      if (this.state.isEditProfileClicked) {\n        this.handleCancelOfUpdate();\n      }\n    };\n\n    this.handleFormInput = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      console.log(name, value);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSavingChanges = event => {\n      event.preventDefault();\n      PROFILE_SERVICE.handleUpdateStudentDetails(this.state).then(() => {\n        this.setState({\n          isEditDetailsClicked: false\n        }, () => {\n          this.getUser();\n        });\n      });\n    };\n\n    this.handleCancelOfUpdate = () => {\n      this.setState({\n        isEditDetailsClicked: false\n      }, () => this.getUser());\n    };\n  }\n\n  componentDidMount() {\n    console.log('from the props in cdid mount', this.props.user._id);\n    this.setState({\n      user: this.props.user\n    }, () => {\n      console.log('from state', this.state);\n      this.getUser();\n    });\n  }\n\n  render() {\n    var _this$state$user;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imageSection\",\n            children: [this.state.profilePic && /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"profilePicture\",\n              src: this.state.profilePic,\n              alt: \"profile pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), this.state.isEditProfileClicked && /*#__PURE__*/_jsxDEV(\"label\", {\n              id: \"imageInputLabel\",\n              children: [\"Add/Update profile picture\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"imageInput\",\n                type: \"file\",\n                name: \"profilePic\",\n                onChange: event => this.getUserWithUpdatedProfilePicture(event),\n                ref: ref => this.fileInput = ref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userDetailsSection\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controlButtonsUserDetails\",\n              children: [this.state.isEditDetailsClicked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: event => this.handleSavingChanges(event),\n                  autoComplete: \"off\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"First name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      autoFocus: true,\n                      name: \"firstName\",\n                      id: \"firstName\",\n                      value: this.state.firstName,\n                      onChange: this.handleFormInput\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 25\n                    }, this), !this.state.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"requiredField\",\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Last name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"lastName\",\n                      id: \"lastName\",\n                      value: this.state.lastName,\n                      onChange: this.handleFormInput\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this), !this.state.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"requiredField\",\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Country\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"countryOfOrigin\",\n                      id: \"country\",\n                      value: this.state.countryOfOrigin,\n                      onChange: this.handleFormInput\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 25\n                    }, this), !this.state.countryOfOrigin && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"requiredField\",\n                      children: \"This field is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"About myself (max 1000 characters)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      maxLength: \"1000\",\n                      name: \"aboutMe\",\n                      id: \"description\",\n                      value: this.state.aboutMe,\n                      onChange: this.handleFormInput\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: this.state.error,\n                    className: \"formControlButtons\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"cancelChangesButton\",\n                  onClick: this.handleCancelOfUpdate,\n                  className: \"formControlButtons\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plainUserDetails\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [this.state.firstName, \" \", this.state.lastName, ' ', /*#__PURE__*/_jsxDEV(CountryFlag, {\n                      countryOfOrigin: this.state.countryOfOrigin\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: this.state.aboutMe\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), this.state.isEditProfileClicked && !this.state.isEditDetailsClicked && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"editMyDetailsButton\",\n                  onClick: this.handleEditButton,\n                  children: \"Edit my details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"deleteProfileButton\",\n                  onClick: this.handleDeleteButton,\n                  children: \"Delete my profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: this.state.isEditProfileClicked && '#F47174',\n              color: this.state.isEditProfileClicked && '#fff'\n            },\n            id: \"editMyProfileButton\",\n            onClick: this.handleEditProfileButton,\n            children: this.state.isEditProfileClicked ? 'Hide control buttons' : 'Edit my profile'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"myClassesSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"showMyBookingsButton\",\n            onClick: this.handleShowBookingsButton,\n            children: this.state.isShowMyBookingsClicked ? 'Hide my bookings' : 'Show my bookings'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), ((_this$state$user = this.state.user) === null || _this$state$user === void 0 ? void 0 : _this$state$user._id) && this.state.isShowMyBookingsClicked && /*#__PURE__*/_jsxDEV(MyLessons, {\n            studentId: this.state.user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default StudentProfile;","map":{"version":3,"sources":["/Users/fernandosalcedo/Desktop/Ironhack/academy-hacks/prog-lang-tutor-client/src/components/Profile/StudentProfile.jsx"],"names":["React","Component","Link","axios","PROFILE_SERVICE","PATHS","CountryFlag","MyLessons","USER_SERVICE","StudentProfile","state","firstName","lastName","profilePic","countryOfOrigin","teachingExperience","timeRangeOfAvailability","coursesTaught","isEditProfileClicked","isEditDetailsClicked","isShowMyBookingsClicked","prevCourseName","getUser","getSpecificStudent","user","_id","then","res","setState","aboutMe","handleDeleteButton","deleteStudent","responseFromApi","console","log","props","history","push","HOMEPAGE","handleLogout","getUserWithUpdatedProfilePicture","event","file","target","files","uploadData","FormData","append","handleUpload","handleRange","name","value","handleEditButton","handleShowBookingsButton","handleEditProfileButton","handleCancelOfUpdate","handleFormInput","handleSavingChanges","preventDefault","handleUpdateStudentDetails","componentDidMount","render","ref","fileInput","error","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Profile.css';\nimport PROFILE_SERVICE from '../../services/ProfileServices';\nimport * as PATHS from '../../utils/paths.js';\nimport CountryFlag from '../CountryFlag/CountryFlag';\nimport MyLessons from '../MyLessons/MyLessons';\nimport USER_SERVICE from '../../services/UserServices.js';\n\nclass StudentProfile extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    profilePic: '',\n    countryOfOrigin: '',\n    teachingExperience: '',\n    timeRangeOfAvailability: '',\n    coursesTaught: '',\n    isEditProfileClicked: false,\n    isEditDetailsClicked: false,\n    isShowMyBookingsClicked: false,\n    prevCourseName: '',\n  };\n\n  componentDidMount() {\n    console.log('from the props in cdid mount', this.props.user._id);\n    this.setState(\n      {\n        user: this.props.user,\n      },\n      () => {\n        console.log('from state', this.state);\n        this.getUser();\n      }\n    );\n  }\n\n  getUser = () => {\n    USER_SERVICE.getSpecificStudent(this.state.user._id).then((res) => {\n      this.setState({\n        firstName: res.user.firstName,\n        lastName: res.user.lastName,\n        countryOfOrigin: res.user.countryOfOrigin,\n        profilePic: res.user.profilePic,\n        aboutMe: res.user.aboutMe,\n      });\n    });\n  };\n\n  handleDeleteButton = () => {\n    USER_SERVICE.deleteStudent(this.state.user._id).then((responseFromApi) => {\n      console.log('Student after deletion', responseFromApi);\n      this.props.history.push(PATHS.HOMEPAGE);\n    });\n    this.props.handleLogout();\n  };\n\n  getUserWithUpdatedProfilePicture = (event) => {\n    const file = event.target.files[0];\n    const uploadData = new FormData();\n    uploadData.append('profilePic', file);\n    PROFILE_SERVICE.handleUpload(uploadData, this.state.user._id).then(\n      (responseFromApi) => {\n        this.setState(\n          {\n            profilePic: responseFromApi.user,\n          },\n          () => {\n            this.getUser();\n          }\n        );\n      }\n    );\n  };\n\n  handleRange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleEditButton = () => {\n    this.setState({ isEditDetailsClicked: !this.state.isEditDetailsClicked });\n  };\n\n  handleShowBookingsButton = () => {\n    this.setState({\n      isShowMyBookingsClicked: !this.state.isShowMyBookingsClicked,\n    });\n  };\n\n  handleEditProfileButton = () => {\n    this.setState({ isEditProfileClicked: !this.state.isEditProfileClicked });\n    if (this.state.isEditProfileClicked) {\n      this.handleCancelOfUpdate();\n    }\n  };\n\n  handleFormInput = (event) => {\n    const { name, value } = event.target;\n    console.log(name, value);\n    this.setState({ [name]: value });\n  };\n\n  handleSavingChanges = (event) => {\n    event.preventDefault();\n    PROFILE_SERVICE.handleUpdateStudentDetails(this.state).then(() => {\n      this.setState(\n        {\n          isEditDetailsClicked: false,\n        },\n        () => {\n          this.getUser();\n        }\n      );\n    });\n  };\n\n  handleCancelOfUpdate = () => {\n    this.setState(\n      {\n        isEditDetailsClicked: false,\n      },\n      () => this.getUser()\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <div>\n          <div className='profileContainer'>\n            <div className='imageSection'>\n              {this.state.profilePic && (\n                <img\n                  id='profilePicture'\n                  src={this.state.profilePic}\n                  alt='profile pic'\n                />\n              )}\n              {this.state.isEditProfileClicked && (\n                <label id='imageInputLabel'>\n                  Add/Update profile picture\n                  <input\n                    id='imageInput'\n                    type='file'\n                    name='profilePic'\n                    onChange={(event) =>\n                      this.getUserWithUpdatedProfilePicture(event)\n                    }\n                    ref={(ref) => (this.fileInput = ref)}\n                  />\n                </label>\n              )}\n            </div>\n            <div className='userDetailsSection'>\n              <div className='controlButtonsUserDetails'>\n                {this.state.isEditDetailsClicked ? (\n                  <>\n                    <form\n                      onSubmit={(event) => this.handleSavingChanges(event)}\n                      autoComplete='off'\n                    >\n                      <div>\n                        <label>First name</label>\n                        <input\n                          autoFocus\n                          name='firstName'\n                          id='firstName'\n                          value={this.state.firstName}\n                          onChange={this.handleFormInput}\n                        />\n                        {!this.state.firstName && (\n                          <span className='requiredField'>\n                            This field is required\n                          </span>\n                        )}\n                      </div>\n                      <div>\n                        <label>Last name</label>\n                        <input\n                          name='lastName'\n                          id='lastName'\n                          value={this.state.lastName}\n                          onChange={this.handleFormInput}\n                        />\n                        {!this.state.lastName && (\n                          <span className='requiredField'>\n                            This field is required\n                          </span>\n                        )}\n                      </div>\n                      <div>\n                        <label>Country</label>\n                        <input\n                          name='countryOfOrigin'\n                          id='country'\n                          value={this.state.countryOfOrigin}\n                          onChange={this.handleFormInput}\n                        />\n                        {!this.state.countryOfOrigin && (\n                          <span className='requiredField'>\n                            This field is required\n                          </span>\n                        )}\n                      </div>\n                      <div>\n                        <label>About myself (max 1000 characters)</label>\n                        <textarea\n                          maxLength='1000'\n                          name='aboutMe'\n                          id='description'\n                          value={this.state.aboutMe}\n                          onChange={this.handleFormInput}\n                        />\n                      </div>\n                      <button\n                        disabled={this.state.error}\n                        className='formControlButtons'\n                      >\n                        Save\n                      </button>\n                    </form>\n                    <button\n                      id='cancelChangesButton'\n                      onClick={this.handleCancelOfUpdate}\n                      className='formControlButtons'\n                    >\n                      Cancel\n                    </button>\n                  </>\n                ) : (\n                  <div className='plainUserDetails'>\n                    <div>\n                      <h3>\n                        {this.state.firstName} {this.state.lastName}{' '}\n                        <CountryFlag\n                          countryOfOrigin={this.state.countryOfOrigin}\n                        />\n                      </h3>\n                    </div>\n                    <div>\n                      <p>{this.state.aboutMe}</p>\n                    </div>\n                  </div>\n                )}\n                {this.state.isEditProfileClicked &&\n                  !this.state.isEditDetailsClicked && (\n                    <>\n                      <button\n                        id='editMyDetailsButton'\n                        onClick={this.handleEditButton}\n                      >\n                        Edit my details\n                      </button>\n                      <button\n                        id='deleteProfileButton'\n                        onClick={this.handleDeleteButton}\n                      >\n                        Delete my profile\n                      </button>\n                    </>\n                  )}\n              </div>\n            </div>\n            <button\n              style={{\n                backgroundColor: this.state.isEditProfileClicked && '#F47174',\n                color: this.state.isEditProfileClicked && '#fff',\n              }}\n              id='editMyProfileButton'\n              onClick={this.handleEditProfileButton}\n            >\n              {this.state.isEditProfileClicked\n                ? 'Hide control buttons'\n                : 'Edit my profile'}\n            </button>\n          </div>\n          <div id='myClassesSection'>\n            <button\n              id='showMyBookingsButton'\n              onClick={this.handleShowBookingsButton}\n            >\n              {this.state.isShowMyBookingsClicked\n                ? 'Hide my bookings'\n                : 'Show my bookings'}\n            </button>\n            {this.state.user?._id && this.state.isShowMyBookingsClicked && (\n              <MyLessons studentId={this.state.user._id} />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default StudentProfile;\n"]},"metadata":{},"sourceType":"module"}